// Better Auth Models
// Authentication and session management

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  emailVerified Boolean   @default(false)
  name          String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Anonymous authentication plugin field
  isAnonymous   Boolean   @default(false)

  // Relations
  sessions      Session[]
  accounts      Account[]
  verifications Verification[]

  // Future relations (uncomment as needed)
  // creatorProfile CreatorProfile?
  // content        Content[]
  // subscriptions  Subscription[]
  // payments       Payment[]

  @@map("user")
}

model Session {
  id        String   @id @default(cuid())
  token     String   @unique
  expiresAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("session")
}

model Account {
  id           String   @id @default(cuid())
  accountId    String
  providerId   String
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken  String?  @db.Text
  refreshToken String?  @db.Text
  idToken      String?  @db.Text
  expiresAt    DateTime?
  password     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([providerId, accountId])
  @@map("account")
}

model Verification {
  id         String   @id @default(cuid())
  identifier String
  value      String
  expiresAt  DateTime
  userId     String?
  user       User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("verification")
}